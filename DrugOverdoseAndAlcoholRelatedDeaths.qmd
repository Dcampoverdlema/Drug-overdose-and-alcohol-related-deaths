---
title: "Drug overdose and alcohol related deaths"
author: 
- Dennis Campoverde-Lema
- Samantha Parras 
- Jodie Chen 
date: "July 26, 2024"
toc: true
format:
  html:
    theme: cosmo
    html-math-method: katex
    self-contained: true
execute:
  echo: false
  warning: false
  message: false
---

# Introduction

  In 2022, 46.8 million Americans who were twelve years of age or older struggled with a drug use disorder.  Eight million Americans aged twelve and older battled alcohol and drug use issues at the same time that year. 

  Use of drugs and alcohol has substantial financial consequences. Every year, excessive alcohol use costs 249 billion dollars in lost productivity, medical expenditures, and criminal justice costs. In contrast, illicit drug usage costs 193 billion dollars in lost productivity, criminality, and medical costs. Communities can benefit from adopting and putting into practice policies that lessen prescription drug abuse and excessive alcohol consumption.


## Our Question

**Are there demographic and social factors that are predictors of drug overdose and alcohol-related incidents (e.g., driving accidents)?**

## Hypothesis

**The chances of drug overdoses and alcohol-related driving incidents can be predicted by demographic factors like age, gender, and race as well as social factors like substance use habits and socioeconomic status.** 


# Data

The data is collected by the University of Wisconsin Population Health Institute. It assigns a ranking based on health outcomes and health factors to each county in every state. There were originally 770 variables in the data set. Since the data set is so big, another data set was created with only the variables related to drug overdose deaths and alcohol-impaired driving deaths. Predictor variables are drug overdose deaths and alcohol-impaired driving deaths.

Here are some of the predictor variables picked and the reason for selecting them:

**Unemployment:** Compared to the employed population, the unemployed population has worse health and higher death rates. 

**Median Income:** The impact of median household income on the likelihood of poverty on individuals and families can have detrimental effects on their mental and physical well-being.

**Disconnected Youth:** Disconnected youth have a higher likelihood of experiencing violence, smoking, drinking, and using marijuana.

**High School Graduation:** A higher level of education is linked to a lower likelihood of smoking. Adults with higher levels of education typically have more employment opportunities and make more money overall.

**Social Associations:** Reduced participation in communal life and little social interaction with others are linked to higher rates of illness and early death. Compared to those with strong networks, those without strong social networks are less likely to choose healthy lifestyles.


```{r} 
library(janitor)
library(ggplot2)
library(tidyverse)
library(sf)
library(dplyr)
library(broom)
library(VIM)
library(ggfortify)
library(class)


```


```{r, include=FALSE}

health_data_alc <- read_csv("data/final_data.csv")

health_data_alc <- health_data_alc |> 
  select(-name, -...1, -population, -drug_overdose_deaths,-homicides, -adult_smoking) |> 
  filter(!is.na(alcohol_impaired_driving_deaths))
 
health_data_alc <- na.omit(health_data_alc)


health_data_drug <- read_csv("data/final_data.csv")

health_data_drug <- health_data_drug |> 
  select(-name, -...1, -population, -alcohol_impaired_driving_deaths,-homicides) |> 
  filter(!is.na(drug_overdose_deaths))

health_data_drug <- na.omit(health_data_drug)

```
 
Upon inspection, the variable of drug overdose deaths was found to have many N/A values, and it is important to ensure this variable is clean as it is one of the main variables to be analyzed. Additionally, rename the data so that it can be read easier and look presentable for any visuals. 

```{r, include=FALSE} 

```

# Intial EDA 

Looking at the states with respect to drug overdose deaths and alcohol-impaired driving deaths, the areas with the most issues can be identified, and solutions can eventually be developed.

```{r, include=FALSE} 
health_data <- read.csv("data/analytic_data2024.csv") %>%  
  clean_names()

selected_data <- health_data %>% 
  select(
    state_fips_code, county_fips_code, state_abbreviation, name,
    drug_overdose_deaths_raw_value, alcohol_impaired_driving_deaths_raw_value,
    unemployment_raw_value, income_inequality_raw_value, high_school_completion_raw_value, 
    adult_smoking_raw_value, excessive_drinking_raw_value, median_household_income_raw_value,
    some_college_raw_value, children_in_poverty_raw_value, children_in_single_parent_households_raw_value,
    social_associations_raw_value, x_below_18_years_of_age_raw_value, 
    x_65_and_older_raw_value, x_non_hispanic_black_raw_value, 
    x_american_indian_or_alaska_native_raw_value, x_asian_raw_value, 
    x_native_hawaiian_or_other_pacific_islander_raw_value, x_hispanic_raw_value, 
    x_non_hispanic_white_raw_value, x_not_proficient_in_english_raw_value, 
    x_female_raw_value, x_rural_raw_value, population_raw_value
  )

selected_data <- selected_data |> 
  mutate(across(
    starts_with("drug_overdose_deaths_raw_value") | starts_with("alcohol_impaired_driving_deaths_raw_value") |
      starts_with("unemployment_raw_value") | starts_with("income_inequality_raw_value") | 
      starts_with("high_school_completion_raw_value") | starts_with("adult_smoking_raw_value") |
      starts_with("excessive_drinking_raw_value") | starts_with("median_household_income_raw_value") |
      starts_with("some_college_raw_value") | starts_with("children_in_poverty_raw_value") | 
      starts_with("children_in_single_parent_households_raw_value") | 
      starts_with("social_associations_raw_value") | starts_with("x_below_18_years_of_age_raw_value") | 
      starts_with("x_65_and_older_raw_value") | starts_with("x_non_hispanic_black_raw_value") | 
      starts_with("x_american_indian_or_alaska_native_raw_value") | starts_with("x_asian_raw_value") | 
      starts_with("x_native_hawaiian_or_other_pacific_islander_raw_value") | starts_with("x_hispanic_raw_value") | 
      starts_with("x_non_hispanic_white_raw_value") | starts_with("x_not_proficient_in_english_raw_value") | 
      starts_with("x_female_raw_value") | starts_with("x_rural_raw_value") | starts_with("population_raw_value"),
    as.numeric
  ))
```


```{r} 
library(maps)
state_data <- selected_data |>
  filter(county_fips_code=='000',state_abbreviation!="US", state_abbreviation !="DC") |>  
  rename(state=name) 
state_data$state <- tolower(state_data$state)

us_states_map <- map_data("state")

merged_data <- us_states_map %>%
  left_join(state_data, by = c("region" = "state"))

ggplot(data = merged_data, aes(x = long, y = lat, group = group)) +
  geom_polygon(aes(fill = drug_overdose_deaths_raw_value), color = "white") +
  scale_fill_gradient(low = "blue", high = "red", na.value = "grey50") +
  coord_fixed(1.3)+
 theme_bw() +  # Apply the minimal theme
  theme(
    axis.title = element_blank(),
    axis.text = element_blank(),
    axis.ticks = element_blank(), 
    plot.title = element_text(hjust = 0.5, face = "bold", size = 20),  
    plot.subtitle = element_text(hjust = 0.5, face = "plain", size = 8),   
    plot.caption = element_text(face = "italic", size = 6, hjust = 0)  
  ) +
  labs(
    title = "Drug Overdose Deaths by State",
    subtitle = "Data source: County Health Rankings & Roadmaps (https://www.countyhealthrankings.org/)",
    fill = "*Drug Overdose Deaths"
  )


ggplot(data = merged_data, aes(x = long, y = lat, group = group)) +
  geom_polygon(aes(fill = alcohol_impaired_driving_deaths_raw_value), color = "white") +
  scale_fill_gradient(low = "blue", high = "red", na.value = "grey50",labels = scales::percent_format(scale = 100)) +
  coord_fixed(1.3) +
  theme_bw() +  # Apply the minimal theme
  theme(
    axis.title = element_blank(),
    axis.text = element_blank(),
    axis.ticks = element_blank(),  
    plot.title = element_text(hjust = 0.5, face = "bold", size = 15),  
    plot.subtitle = element_text(hjust = 0.5, face = "plain", size = 8),  
    plot.caption = element_text(face = "italic", size = 6, hjust = 0))+
  labs(
    title = "Alcohol Impaired Driving Deaths by State",
    subtitle = "Data source: County Health Rankings & Roadmaps (https://www.countyhealthrankings.org/)",
    fill = "*Alcohol Driving Deaths",
    caption = "*Percentage of motor vehicle crash deaths with alcohol involvement."
  )


```

West Virginia has the highest amount of drug overdose deaths. By conducting further research on West Virginia, it was found that the state leads the nation in opioid-related drug overdose deaths. According to the Drug Enforcement Administration, West Virginia has one of the highest prescription rates for opioids in the country and also has a high prevalence of controlled prescription drug addiction and trafficking. Furthermore, the usage of illegal prescription drugs was a factor in almost 61% of state overdose deaths in 2015.

For alcohol-impaired driving deaths, Montana had the highest amount of deaths resulting from alcohol-impaired driving. According to Forbes, Montana has the highest rate of drunk driving, with 8.57 fatal crashes involving drunk drivers for every 100,000 licensed drivers and 7.14 fatal crashes involving drunk drivers for every 100,000 state population. These rates are the highest in the country. Montana has the highest percentage of drunk drivers in the country—more than two-fifths (43.51%) of road fatalities.

By analyzing the predictors of both drug overdose deaths and alcohol-impaired driving deaths, solutions and regulations can hopefully be developed to help these states with their ongoing problems. 


Another intial EDA: 

```{r}

selected_data$`Income level` <- cut(selected_data$median_household_income_raw_value,
                                    breaks = c(-Inf, 52610, 60986, 70897, Inf),
                                    labels = c("Low", "Lower-Middle", "Upper-Middle", "High"),
                                    right = TRUE, na.rm=TRUE)

filtered_data <- selected_data[!is.na(selected_data$`Income level`), ]

ggplot(filtered_data, aes(x = adult_smoking_raw_value, y = drug_overdose_deaths_raw_value)) +
  geom_point(size = 2, alpha = 0.7, aes(color = `Income level`)) +
  geom_smooth(method = 'lm', se = TRUE, color = "black") +
  theme_bw() +
  scale_x_continuous(labels = scales::percent_format()) +
  labs(title = "Smoking Rate Relationship With Drug Overdose",
       x = 'Adult Smoking Rate',
       y = 'Drug Overdose Deaths per 100,000 population') +
  scale_color_manual(values = c("Low" = "darkred", "Lower-Middle" = "red", "Upper-Middle" = "blue", "High" = "darkblue")) + 
  theme(
    plot.title = element_text(size = 16))

```
The scatter figure, which is broken down by income level, shows the correlation between adult smoking rates and the number of drug overdose deaths per 100,000 people. The trend line shows a positive association, implying that there is a connection between an increase in drug overdose deaths and rising smoking rates. Dark red areas are low-income areas, which tend to cluster in the higher ranges of both smoking rates and overdose deaths. High-income areas, indicated in dark blue, on the other hand, typically have lower smoking rates and fewer overdose deaths.

Now lets take a deeper look into Montana Alcohol imparaierd driving deaths by counties: 

```{r}
MT_data <-selected_data |>
  filter(state_abbreviation == "MT", population_raw_value > 3000) |>
  drop_na(alcohol_impaired_driving_deaths_raw_value) |>
  mutate(income_label=round(median_household_income_raw_value/1000, 0)) |> 
  mutate(income_label = paste0('$',as.character(income_label), 'K')) |> 
  mutate(income_label = replace(income_label, sample(row_number(),
                                                     size = ceiling(0.7 * n()),
                                                     replace = F), NA))

# 2 bins
MT_data$`Income Level` = ifelse(MT_data$median_household_income_raw_value > 60350, "High", "Low")

# 3 bins
MT_data$`Income Level` = ifelse(MT_data$median_household_income_raw_value <= 53577, "Low", 
               ifelse(MT_data$median_household_income_raw_value >= 68006, "High", "Average"))

p<-ggplot(MT_data, aes(x = unemployment_raw_value, y = alcohol_impaired_driving_deaths_raw_value)) +
  geom_point(size = 2, alpha = 0.5, aes(color = `Income Level`)) +
  ggrepel::geom_text_repel(aes(label = income_label, color = `Income Level`), 
                           show.legend = F) +
  geom_smooth(aes(color = `Income Level`), se=FALSE) +
  scale_y_continuous(labels=scales::percent_format()) +
  scale_x_continuous(labels=scales::percent_format()) +
  labs(title = "Montana counties: unemploymemnt relationship with alcohol driving deaths",
       x = 'Unemployment Rate',
       y = '% of driving deaths with alcohol involvement') +
  scale_color_manual(values = c("Low" = "blue", "Average" = "red", "High" = "midnightblue")) +
  theme_bw() 

p + labs(caption = "*Restricting to counties with population > 3000")
```

jodie description here!! >:(


# Modeling

To eventually uncover the predictors, the first step is to conduct a regression analysis. This can assist in deciding which variables should be taken into consideration and which ones not. First, finding the best regression model for the data is essential, as this can help achieve more accurate results.


**K-Fold Cross-Validation** 

This is a good way to check that the data is correct: the original data is randomly split into k equal parts. The model is trained with k-1 parts, and one part is set away to test it. This process is done k times, with a new part being tested each time. Finally, the scores from all k tests are added together to get a single estimate of how well the program worked.

**Steps Taken:**

**Preparing the Data:** For cross-validation, we divided the data into five folds. One fold was used as a test set, and the other four folds were used as training sets.

**Training as a Model:** The training data was used to teach the five models how to work with each shape.

**Making Predictions:** Then, to see how well each model worked, we found its Root Mean Squared Error (RMSE). The RMSE numbers for each model were compared across all bends. The RMSE is a standard way to figure out how well a model predicts numeric data; lower RMSE numbers mean the model that has the least amount of error. "Most of the time". 

```{r}

library(dplyr)
library(glmnet)
library(tidyr)
library(randomForest)


set.seed(101)
k <- 5
health_data_drug <- health_data_drug |>
  mutate(test_fold = sample(rep(1:k, length.out = n())))

get_test_pred <- function(k) {
  test_data <- health_data_drug |>  filter(test_fold == k)                     # get test and training data
  train_data <- health_data_drug |>  filter(test_fold != k)
  test_x <- as.matrix(select(test_data, -drug_overdose_deaths))            # get test and training matrices
  train_x <- as.matrix(select(train_data, -drug_overdose_deaths))
  
  lm_fit <- lm(drug_overdose_deaths ~ ., data = train_data)                  # fit models to training data
  ridge_fit <- cv.glmnet(train_x, train_data$drug_overdose_deaths, alpha = 0)
  lasso_fit <- cv.glmnet(train_x, train_data$drug_overdose_deaths, alpha = 1)
  enet_fit <- cv.glmnet(train_x, train_data$drug_overdose_deaths, alpha = 0.5)
  rf_fit <- randomForest(drug_overdose_deaths ~ ., data = train_data, importance = TRUE)
  
  tibble(lm_pred = predict(lm_fit, newdata = test_data),              # return test results
         ridge_pred = as.numeric(predict(ridge_fit, newx = test_x)),
         lasso_pred = as.numeric(predict(lasso_fit, newx = test_x)),
         enet_pred = as.numeric(predict(enet_fit, newx = test_x)),
         rf_pred = predict(rf_fit, newdata = test_data),
         test_actual = test_data$drug_overdose_deaths,
         test_fold = k)
}

# Initialize an empty tibble to store the results
test_pred_all <- tibble()

# Loop over the values from 1 to k and apply the get_test_pred function
for (i in 1:k) {
  test_pred_all <- bind_rows(test_pred_all, get_test_pred(i))
}


test_pred_all |>
  pivot_longer(lm_pred:rf_pred, 
               names_to = "type", 
               values_to = "test_pred") |>
  group_by(type, test_fold) |>
  summarize(
    rmse = sqrt(mean((test_actual - test_pred)^2))
  ) |> 
  ggplot(aes(x = type, y = rmse)) + 
  geom_point(size = 4) +
  stat_summary(fun = mean, geom = "point", 
               color = "red", size = 4) + 
  stat_summary(fun.data = mean_se, geom = "errorbar", 
               color = "red", width = 0.2) + 
  theme_bw() +
  labs(title="Test and Train: Drug Overdose Deaths", 
       y = 'Root Mean Squared Error',
       x = NULL) +
  theme(
    axis.title = element_text(size = 14),
    axis.text.y = element_text(size = 14, ),
    axis.text.x = element_text(size= 14, ),
    plot.title = element_text(size = 20)
  ) +
  scale_x_discrete(labels=c("enet_pred"="Elastic","lasso_pred"="Lasso","lm_pred"="Linear","rf_pred" = "Random Forest", "ridge_pred"="Ridge"))
```

Results from the error bar graph, Random Forest model had the lowest RMSE, which meant it was the most accurate to find our predictors

Now we are going to do the same K - cross validation to find best models for alcohol impaired driving deaths.

```{r}

set.seed(101)
k <- 5
health_data_alc <- health_data_alc |>
  mutate(test_fold = sample(rep(1:k, length.out = n())))


get_test_pred <- function(k) {
  test_data <- health_data_alc |>  filter(test_fold == k)                     # get test and training data
  train_data <- health_data_alc |>  filter(test_fold != k)
  test_x <- as.matrix(select(test_data, -alcohol_impaired_driving_deaths))            # get test and training matrices
  train_x <- as.matrix(select(train_data, -alcohol_impaired_driving_deaths))
  
  lm_fit <- lm(alcohol_impaired_driving_deaths ~ ., data = train_data)                  # fit models to training data
  ridge_fit <- cv.glmnet(train_x, train_data$alcohol_impaired_driving_deaths, alpha = 0)
  lasso_fit <- cv.glmnet(train_x, train_data$alcohol_impaired_driving_deaths, alpha = 1)
  enet_fit <- cv.glmnet(train_x, train_data$alcohol_impaired_driving_deaths, alpha = 0.5)
  rf_fit <- randomForest(alcohol_impaired_driving_deaths ~ ., data = train_data, importance = TRUE)
  
  tibble(lm_pred = predict(lm_fit, newdata = test_data),              # return test results
         ridge_pred = as.numeric(predict(ridge_fit, newx = test_x)),
         lasso_pred = as.numeric(predict(lasso_fit, newx = test_x)),
         enet_pred = as.numeric(predict(enet_fit, newx = test_x)),
         rf_pred = predict(rf_fit, newdata = test_data),
         test_actual = test_data$alcohol_impaired_driving_deaths,
         test_fold = k)
}

# Initialize an empty tibble to store the results
test_pred_all <- tibble()

# Loop over the values from 1 to k and apply the get_test_pred function
for (i in 1:k) {
  test_pred_all <- bind_rows(test_pred_all, get_test_pred(i))
}

test_pred_all |>
  pivot_longer(lm_pred:rf_pred, 
               names_to = "type", 
               values_to = "test_pred") |>
  group_by(type, test_fold) |>
  summarize(
    rmse = sqrt(mean((test_actual - test_pred)^2))
  ) |> 
  ggplot(aes(x = type, y = rmse)) + 
  geom_point(size = 4) +
  stat_summary(fun = mean, geom = "point", 
               color = "red", size = 4) + 
  stat_summary(fun.data = mean_se, geom = "errorbar", 
               color = "red", width = 0.2) + 
  theme_bw() +
  labs( title="Test and Train: Alcohol Impaired Driving Deaths", 
         y = 'Root Mean Squared Error',
        x = NULL) +
  theme(
    axis.title = element_text(size = 14),
    axis.text.y = element_text(size = 14, ),
    axis.text.x = element_text(size= 14, ),
    plot.title = element_text(size = 20)
  ) +
  scale_x_discrete(labels=c("enet_pred"="Elastic","lasso_pred"="Lasso","lm_pred"="Linear","rf_pred" = "Random Forest", "ridge_pred"="Ridge"))

```

As you can see linear model has the least amount of error compared to the others but you can make an argument to use other models like random forest to find predictors. 

```{r}

```

# Results

Looking at Alcohol Impaired Driving Deaths predictors using linear model lm() function: 

```{r}

alcohol_lm <- lm(alcohol_impaired_driving_deaths ~ . , data=health_data_alc)

alcohol_lm |>
  tidy() |>
  mutate(
    term = gsub("_", " ", term),
    term = sapply(term, function(x) { paste(toupper(substring(x, 1, 1)), substring(x, 2), sep = "", collapse = " ") }), 
    term = case_when(
      p.value <= 0.001 ~ paste0(term, "***"),
      p.value <= 0.01 ~ paste0(term, "**"),
      p.value <= 0.05 ~ paste0(term, "*"),
      p.value <= 0.1 ~ paste0(term, "."),
      TRUE ~ term
    ),
    term = fct_reorder(term, estimate)
  ) |> 
  ggplot(aes(x = estimate, y = term, fill = estimate)) +
  geom_vline(xintercept = 0, linetype = "dashed", color = "black") +
  geom_errorbarh(aes(xmin = estimate - std.error, xmax = estimate + std.error),
                 height = 0.2, linewidth = 2, color = "red", show.legend = FALSE) +
  geom_point(aes(color = estimate), size = 1.8, shape = 21, fill = "black", show.legend = FALSE) +
  labs(y = NULL,x="Coefficient") +
  theme_bw() +
  labs( title="Linear Model for Alcohol Impaired Driving Deaths") +
  theme(
    axis.title = element_text(size = 15),
    axis.text.y = element_text(size = 14, ),
    axis.text = element_text(size = 15, ),
    axis.title.x = element_text(size= 11, ),
    plot.title = element_text(size = 12)
  )

```
Unemployment is the top predictor for alcohol impaired driving deaths. Then if everything is constant, when unemployment increases by 1, then alcohol impaired driving deaths will increase by the coefficient. Other significant predictors are Excessive Drinking, Suicides, and Population Density.  


Now onto drug overdose deaths we are going to use random forest to find our predictors: 

```{r, include = FALSE}

library(tidyverse)
library(glmnet)
library(broom)
library(ggfortify)  

heal <- read_csv("data/final_data.csv")

# remove population density--15.36785
# with population density
drugs_df <- heal |> 
  select(-name, -...1, -population_density, -population, -alcohol_impaired_driving_deaths, -homicides, -excessive_drinking) 


drugs_df |>  summarise(across(everything(), ~ sum(is.na(.))))


drugs_df <- na.omit(drugs_df)

response <- drugs_df$drug_overdose_deaths
predictors <- as.matrix(drugs_df |>  select(-drug_overdose_deaths))

set.seed(123)  # For reproducibility
# cv_fit <- cv.glmnet(predictors, response, alpha = 1, nfolds = 10)
# 
# print(cv_fit)
# 
# plot(cv_fit)

# cv(random forest model)

# finetune mtry (num of predictors at each split)


train<-drugs_df |>
  slice_sample(prop=0.5)
test<-drugs_df|>
  anti_join(train)

x_train<- train |>
  select(-drug_overdose_deaths) |>
  as.matrix()

x_test <- test |>
  select(-drug_overdose_deaths) |>
  as.matrix()

library(caret)
library(tidyverse)
library(ranger)
library(randomForest)

rf_tune_grid <- 
  data.frame(mtry = seq(3, 5, 8), 
           splitrule = "variance",
           min.node.size = 5)
set.seed(123)
drug_overdose_rf <- train(drug_overdose_deaths ~ ., data = train,
        method = "ranger", num.trees = 500,
        trControl = trainControl(method = "cv", number = 10),
        tuneGrid = rf_tune_grid, importance="impurity")

drug_overdose_rf # gives in sample evaluation 12.08305 (average across all 10 test folds)
predictions = predict(drug_overdose_rf, newdata=test) # predicted drug overdose deaths for all the counties


RMSE_test = sqrt(mean((test$drug_overdose_deaths - predictions)^2)) # out of sample evaluation is 13.46791
RMSE_test

# limiting 5 to 6 variables

library(vip)
var_imp<-varImp(drug_overdose_rf)




var_imp_df <- as.data.frame(var_imp$importance)
var_imp_df$Variable <- rownames(var_imp_df)
colnames(var_imp_df)[1] <- "Importance"

# Clean up the y-axis names
var_imp_df$Variable <- gsub("_", " ", var_imp_df$Variable)

```
```{r}
library(tools)
var_imp_df$Variable <- toTitleCase(var_imp_df$Variable)

# Plot the variable importance
ggplot(var_imp_df, aes(x = Importance, y = reorder(Variable, Importance))) +
  geom_point(color = "red", size = 3) +
  labs(title = "Random Forest Model for Drug Over Dose Deaths", x = "Importance", y = NULL) +
  theme_bw() +
  theme(axis.text.y = element_text(size = 12)) +
  theme(
    axis.title = element_text(size = 15),
    axis.text.y = element_text(size = 12, ),
    axis.text = element_text(size = 15, ),
    axis.title.x = element_text(size= 11, ),
    plot.title = element_text(size = 12)
  )
```

Random forest indicates our important variable but to look into.... finishe here jodie 

```{r}
# eda 
library(caret)
library(pdp)
library(gridExtra)
# pdp_hispanic<-drug_overdose_rf |>
#   pdp::partial(pred.var="hispanic") |>
#   autoplot()

pdp_american<-drug_overdose_rf |>
  pdp::partial(pred.var="american_indian_or_alaska_native") |>
  autoplot()

pdp_unemployment<-drug_overdose_rf |>
  pdp::partial(pred.var="unemployment") |>
  autoplot()

pdp_adult_smoking<-drug_overdose_rf |>
  pdp::partial(pred.var="adult_smoking") |>
  autoplot()

pdp_children<-drug_overdose_rf |>
  pdp::partial(pred.var="children_in_single_parent_households") |>
  autoplot()

plot_american_indian_or_alaska_native <- autoplot(pdp_american)
plot_unemployment <- autoplot(pdp_unemployment)
plot_adult_smoking <- autoplot(pdp_adult_smoking)

plot_american_indian_or_alaska_native <- plot_american_indian_or_alaska_native + theme_bw() + geom_line(color = "red") + labs(x="American Indian or Alaska Native")
plot_unemployment <- plot_unemployment + theme_bw() + geom_line(color = "red") + labs(x="Unemployment")
plot_adult_smoking <- plot_adult_smoking + theme_bw()+ geom_line(color = "red") + labs(x="Adult Smoking")
pdp_children <- pdp_children + theme_bw()+ geom_line(color = "red") + labs(x="Children in a Single Parent Household")


grid.arrange(plot_american_indian_or_alaska_native,
             plot_unemployment, plot_adult_smoking, pdp_children,  ncol = 2)


final_drug_rf <-ranger(drug_overdose_deaths ~ ., data = train, num.trees=500, mtry=3, min.node.size=5, importance="impurity")
```

Jodie analysis right here

```{r}



```

# Discussion

From the models, it was found that unemployment is a top predictor for both drug overdose deaths and alcohol-impaired driving deaths. So if unemployment increases, alcohol and drug consumption would most likely increase as well. 
  
A risk factor for substance abuse and drug use disorders is unemployment. According to research, losing one's job and money can cause psychological stress. This  can then deteriorate one's health and cause temporary coping mechanisms like substance abuse. Specifically, research indicates that losing one's job is linked to an increased risk of alcohol-related health issues and the use of illegal drugs. 

Research indicates that substance abuse problems are associated with an increased chance of unemployment because those who struggle with their use are more likely to take sick days and work less productively, both of which can lead to job loss. Studies reveal that addiction also increases the difficulty of getting hired again or finding a new job.

## Ways to Reduce Unemployment

**Career pathways programs:** Programs for career pathways provide low-skilled people with occupation-specific training for higher-skilled roles in rapidly expanding industries including information technology, advanced manufacturing, and health care. These programs integrate social services with academic and technical education; many also include work experience. 

**Summer youth employment programs:** Summer youth employment programs give young people, often between the ages of 14 and 24, temporary jobs. Program organizers typically provide financial support for positions, and programs are managed by nonprofits or government organizations. Private sector businesses, on the other hand, could offer more competitive placements and pay participants directly. Programs may incorporate extra supports, such a work-readiness curriculum, and typically center on giving underprivileged youngsters options.


# Conclusion 

**The hypothesis is half correct. There are social predictors for alcohol-impaired driving deaths and drug overdoses, but there isn’t enough evidence from the results to justify demographic predictors**

In the future, identifying comparable datasets to impute data from and using methods such as k-nearest neighbors (KNN) or grouping by state to fill in the missing data will be prioritized. This approach will enhance data completeness and improve the accuracy of subsequent analyses.

While researching the topic, it was found that men are more likely to overdose on drugs. However, the dataset did not provide any information on the male population. Consequently, males could not be used as a demographic predictor. Additionally there was a lot of missing data 
(insert  more limitations)


# Reference

“Alcohol and Drug Abuse Statistics (Facts About Addiction).” American Addiction Centers, https://americanaddictioncenters.org/addiction-statistics. Accessed July 2024.

Generes, Wendy Manwarren. “Recession, Unemployment, and Drug Addiction: What's the Link?” American Addiction Centers, 21 June 2024, https://americanaddictioncenters.org/blog/recession-unemployment-and-drug-addiction-whats-the-link. Accessed July 2024.

“Health Data.” County Health Rankings, https://www.countyhealthrankings.org/health-data. Accessed July 2024.

“The West Virginia Drug Situation.” DEA.gov, https://www.dea.gov/sites/default/files/2018-07/DEA-WAS-DIR-024-17%20West%20Virginia%20Drug%20Situation%20-UNCLASSIFIED.pdf. Accessed July 2024.

“Worst States For Drunk Driving In 2024 – Forbes Advisor.” Forbes, 3 May 2024, https://www.forbes.com/advisor/car-insurance/worst-states-for-drunk-driving/. Accessed July 2024.

“2023 County Profiles Executive Summary Report.” West Virginia Department of Health and Human Resources. https://dhhr.wv.gov/vip/county-reports/Pages/2023-CSMP-Surveillance-Reports.aspx. Accessed July 2024.
